on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up jdk
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: gradle

      - name: Build with gradle
        run: ./gradlew clean build --exclude-task test

      - name: Create deployment root directory
        run: mkdir -p ./build/deployment

      - name: Rename application.jar
        run: mv ./build/libs/*.jar ./build/deployment/application.jar

      - name: Download New Relic Java Agent
        run: |
          curl -L -o newrelic-java.zip https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip
          unzip -o newrelic-java.zip
          mv newrelic/newrelic.jar ./build/deployment/
          rm -rf newrelic newrelic-java.zip

      - name: Copy newrelic.yml (Java Agent Config)
        run: cp newrelic.yml ./build/deployment/

      - name: Copy Procfile
        run: cp beanstalk/Procfile ./build/deployment/

      - name: Copy .ebextensions
        run: cp -r beanstalk/.ebextensions ./build/deployment/

      - name: Package deployment files
        run: |
          cd build/deployment
          zip -r ../deploy.zip . 

      - name: Set up environment variables
        id: set-env-vars
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          COMMIT_ID=$(git rev-parse --short HEAD)
          BUILD_TIME=$(date +'%Y%m%dT%H:%M:%S.%N')
          AWS_BEANSTALK_VERSION_LABEL="${BRANCH_NAME}-${COMMIT_ID}-${BUILD_TIME}"
          echo "AWS_BEANSTALK_VERSION_LABEL=${AWS_BEANSTALK_VERSION_LABEL}"
          echo "AWS_BEANSTALK_VERSION_LABEL=${AWS_BEANSTALK_VERSION_LABEL}" >> $GITHUB_ENV

      - name: Deploy to Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_GITHUB_ACTIONS_DEPLOYER_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_GITHUB_ACTIONS_DEPLOYER_SECRET_KEY }}
          application_name: ${{ secrets.SERVICE_NAME }}-prod
          environment_name: ${{ secrets.SERVICE_NAME }}-prod-env
          version_label: ${{ env.AWS_BEANSTALK_VERSION_LABEL }}
          region: ${{ secrets.AWS_REGION }}
          deployment_package: ./build/deploy.zip
          use_existing_version_if_available: true